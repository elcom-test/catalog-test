package com.elcom.catalog.dataservice.web;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.elcom.catalog.dataservice.root.DataServiceResponse;
import com.elcom.catalog.dataservice.root.dto.CatalogDTO;
import com.elcom.catalog.dataservice.service.CatalogService;

import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/catalog")
public class CatalogController extends BaseController {

	private CatalogService catalogService;

	@Autowired
	private CatalogController(CatalogService catalogService) {
		this.catalogService = catalogService;
	}



	@ApiOperation(value = "Fetches a master product record (item) from the database",
			notes = "<p>This method fetches a master product record (item) from the database.</p>")
	@GetMapping("/{catId}")
	public ResponseEntity<DataServiceResponse> getItem(@PathVariable("catId") Long catId) {

		Optional<CatalogDTO> item = catalogService.getCatalogById(catId);

		return buildResponse(item);
	}


	@ApiOperation(value = "Persists a master product record (item) in the database",
			notes = "<p>This method persists a master product record (item) in the database. If an id is provided the record (if found will be updated).</p>")
	@PostMapping("/save")
	public ResponseEntity<DataServiceResponse> saveItem(@RequestBody CatalogDTO catalogDTO) {

		catalogService.saveCatalog(catalogDTO);

		return buildResponse(catalogDTO);

	}



}
